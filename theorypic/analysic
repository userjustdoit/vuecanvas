1.imgData

var imgData=ctx.createImageData(2,2);
for (var i=0;i<imgData.data.length;i+=4)
{
  imgData.data[i+0]=255;
  imgData.data[i+1]=0;
  imgData.data[i+2]=0;
  imgData.data[i+3]=255;
}
console.log(JSON.stringify(imgData));

一个像素点由连续的4位表示
{"data":
{
"0":255,"1":0,"2":0,"3":255,
"4":255,"5":0,"6":0,"7":255,
"8":255,"9":0,"10":0,"11":255,
"12":255,"13":0,"14":0,"15":255
}}

ctx.putImageData(imgData,10,10);

任何颜色都由红、绿、蓝三基色组成，假如原来某点的颜色为RGB(R，G，B)，那么，我们可以通过下面几种方法，将其转换为灰度：
1.浮点算法：Gray=R*0.3+G*0.59+B*0.11
2.整数方法：Gray=(R*30+G*59+B*11)/100
3.移位方法：Gray =(R*77+G*151+B*28)>>8;
4.平均值法：Gray=（R+G+B）/3;
5.仅取绿色：Gray=G；
通过上述任一种方法求得Gray后，将原来的RGB(R,G,B)中的R,G,B统一用Gray替换，形成新的颜色RGB(Gray,Gray,Gray)，用它替换原来的RGB(R,G,B)就是灰度图了。
